--- jiffies_module.c	2024-08-22 20:14:39.568330313 +0700
+++ data_module.c	2024-08-22 19:04:07.625202826 +0700
@@ -7,12 +7,16 @@
 #include <linux/fs.h>
 #include <linux/jiffies.h>
 #include <linux/uaccess.h>
+#include <linux/mutex.h>
 
 MODULE_AUTHOR("George");
 MODULE_DESCRIPTION("A simple hello kernelcare module");
 MODULE_LICENSE("GPL");
 
-static struct dentry *dir, *jiffies_file;
+static struct dentry *dir, *jiffies_file, *data_file;
+static char data_buffer[PAGE_SIZE];
+static size_t data_size;
+static DEFINE_MUTEX(data_lock);
 
 static ssize_t jiffies_read(struct file *file,
 							char __user *buf,
@@ -29,6 +33,41 @@
 	.read = jiffies_read,
 };
 
+static ssize_t data_read(struct file *file,
+						char __user *buf,
+						size_t len,
+						loff_t *ppos)
+{
+	ssize_t ret;
+
+	mutex_lock(&data_lock);
+	ret = simple_read_from_buffer(buf, len, ppos, data_buffer, data_size);
+	mutex_unlock(&data_lock);
+	return ret;
+}
+
+static ssize_t data_write(struct file *file,
+							const char __user *buf,
+							size_t len,
+							loff_t *ppos)
+{
+	ssize_t ret;
+
+	mutex_lock(&data_lock);
+	if (len > PAGE_SIZE)
+		len = PAGE_SIZE;
+	ret = simple_write_to_buffer(data_buffer, PAGE_SIZE, ppos, buf, len);
+	if (ret >= 0)
+		data_size = ret;
+	mutex_unlock(&data_lock);
+	return ret;
+}
+
+static const struct file_operations data_fops = {
+	.read = data_read,
+	.write = data_write,
+};
+
 static int __init hello_kernelcare_init(void)
 {
 	dir = debugfs_create_dir("kernelcare", NULL);
@@ -47,6 +86,11 @@
 		return -1;
 	}
 
+	data_file = debugfs_create_file("data",
+									0444,
+									dir,
+									NULL,
+									&data_fops);
 	pr_debug("Hello, KernelCare!");
 	return 0;
 }
@@ -57,5 +101,6 @@
 	debugfs_remove_recursive(dir);
 }
 
+
 module_init(hello_kernelcare_init);
 module_exit(hello_kernelcare_exit);
